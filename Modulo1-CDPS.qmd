---
title: "Ci√™ncia de Dados para Pesquisadores da Sa√∫de"
subtitle: |
  M√≥dulo 1: Ferramentas, linguagens e possibilidades<br><br><br>  
  *Projeto Sa√∫de Data Science*
format: 
    revealjs:
      slide-number: true
      slide-level: 3
      logo: logoUFR.png
      incremental: true
      scrollable: true
      theme: simple
      code-fold: false
      self-contained: true
      number-sections: false
      css: estilo_modulo1_slides.css
editor: visual
---

# Sobre o Curso

## üéØ Objetivo

<br><br> Introduzir estudantes de inicia√ß√£o cient√≠fica, p√≥s-gradua√ß√£o e pesquisadores ao uso da ci√™ncia de dados na pesquisa em sa√∫de.

## M√≥dulos

-   M√≥dulo 1: Ferramentas, linguagens e possibilidades (12h)\
-   M√≥dulo 2: Manipula√ß√£o de dados, visualiza√ß√£o e bioestat√≠stica com o R (12h) (Set)
-   M√≥dulo 3: Machine learning na sa√∫de (12h)¬†(Nov)
-   M√≥dulo 4: Projeto de aplica√ß√£o (4h)\

### üíª Conte√∫do Program√°tico do M√≥dulo 1

1.  Introdu√ß√£o √† Ci√™ncia de Dados (Teoria)

2.  Introdu√ß√£o ao uso do R <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/r/r-original.svg" alt="R" width="30"/> e RStudio <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/rstudio/rstudio-original.svg" alt="RStudio" width="30"/> (Pr√°tica)

3.  Fundamentos da linguagem R (Teoria)

4.  Controle de vers√µes Git/GitHub <img src="https://cdn.jsdelivr.net/npm/simple-icons@v5/icons/github.svg" alt="GitHub" width="30"/> (Pr√°tica)

5.  Cria√ß√£o de apresenta√ß√µes, relat√≥rios, web-sites, artigos, teses, dashboards e aplicativos web (Pr√°tica)

# Projeto Sa√∫de Data Science

## Objetivo

<br>

Criar oportunidades de intera√ß√£o dial√≥gica com a sociedade por meio da elabora√ß√£o de produtos de dados associados √† ci√™ncia de dados.

------------------------------------------------------------------------

Equipe do Projeto *Sa√∫de Data Science*\
Projeto de Extens√£o UFR N¬∫ 696/2025

<img src="EquipeSDS.png" alt="Equipe Sa√∫de Data Science" class="img-centro"/>

# 2. Introdu√ß√£o

## O que √© ci√™ncia de dados (*Data Science*)

<br>

::: {style="text-align: justify;"}
<p>Campo acad√™mico interdisciplinar que utiliza estat√≠stica, computa√ß√£o cient√≠fica, m√©todos cient√≠ficos, processos, algoritmos e sistemas para extrair ou extrapolar conhecimento e <em>insights</em> de **dados ruidosos**, **estruturados** e **n√£o estruturados** (Dhar, 2013).</p>
:::

------------------------------------------------------------------------

::: panel-tabset

#### üìä Estruturados

```{r}
knitr::include_graphics("dados_sinan.png")
```

#### üßæ N. Estruturados

```{r}
knitr::include_graphics("dados_ficha_notifica√ß√£o.png")
```

#### üìâ Ruidosos

```{r}
knitr::include_graphics("dados_ruidosos.png")
```
:::

---

A ci√™ncia de dados est√° relacionada com

-   **Big Data**\
-   **Minera√ß√£o de Dados (*Data Mining*)**\
-   **Aprendizagem de M√°quina (*Machine Learning*)**

## Minera√ß√£o de Dados <br> (*Data Mining*)

<br>

::: {style="text-align: justify; font-style: italic; border-left: 4px solid #ccc; padding-left: 3em; margin-top: 1em;"}
‚Äú√â o processo de extrair e descobrir padr√µes em grandes bancos de dados envolvendo m√©todos relacionados √† aprendizagem de m√°quina, estat√≠stica e sistemas de bancos de dados.‚Äù Wikipedia

<br>

√â o processo de descobrir automaticamente informa√ß√£o √∫til em grandes reposit√≥rios de dados (Tan et al., 2005)
:::

## Hist√≥rico do *Data Mining* {.smaller}

-   **D√©cada de 1960-70**: Surgimento dos primeiros bancos de dados e linguagens de consulta (ex: SQL).
-   **D√©cada de 1980**: Avan√ßos em armazenamento e recupera√ß√£o de dados; algoritmos de aprendizado simb√≥lico.
-   **D√©cada de 1990**: Populariza√ß√£o do termo *data mining*; surgimento de ferramentas comerciais (ex: IBM Intelligent Miner, SAS Enterprise Miner).
-   **2000s**: Integra√ß√£o com *big data*, algoritmos escal√°veis, minera√ß√£o de dados em tempo real.
-   **2010s em diante**: Consolida√ß√£o como parte da ci√™ncia de dados; uso intensivo de aprendizado de m√°quina e redes neurais.

## Aprendizagem de M√°quina <br> (*Machine Learning*)

-   Consiste em desenvolver algoritmos que permitem os computadores aprenderem dos dados e tomarem decis√µes baseadas em dados\

-   Surgiu na d√©cada de 1950\

-   

    > **Arthur Samuel (1959)** definiu *machine learning* como:\
    > "o campo de estudo que d√° aos computadores a habilidade de aprender sem serem explicitamente programados."

------------------------------------------------------------------------

| Aspecto | Minera√ß√£o de Dados | Aprendizagem de M√°quina |
|------------------|---------------------------|---------------------------|
| **Objetivo principal** | Extrair padr√µes √∫teis e conhecimento de dados | Fazer previs√µes ou tomar decis√µes com base em dados |
| **Enfoque** | Explora√ß√£o e descoberta de padr√µes em grandes conjuntos de dados | Generaliza√ß√£o para novos dados a partir de exemplos passados |
| **Tarefa t√≠pica** | Agrupamento, associa√ß√£o, descoberta de regras | Classifica√ß√£o, regress√£o, clustering supervisionado |
| **Motiva√ß√£o original** | An√°lise de grandes volumes de dados corporativos | Constru√ß√£o de algoritmos que aprendem automaticamente |
| **Uso comum em** | Neg√≥cios, marketing, banco de dados | Intelig√™ncia artificial, rob√≥tica, sistemas aut√¥nomos |
| **Base t√©cnica** | Estat√≠stica + banco de dados + ML | Estat√≠stica + algoritmos + computa√ß√£o |

## Por que Ci√™ncia de Dados na Pesquisa em Sa√∫de?

------------------------------------------------------------------------

## O processo da Ci√™ncia de Dados √© muito semelhante ao da pesquisa quantitativa

------------------------------------------------------------------------

::: {style="text-align: justify;"}
> As mudan√ßas tecnol√≥gicas que iniciaram na d√©cada de 50, e se intensificaram em 1990 e em 2020, mudaram o material emp√≠rico e o fazer cient√≠fico.
:::

------------------------------------------------------------------------

![](artigos.png){fig-align="center"}

------------------------------------------------------------------------

### Uso da ci√™ncia de dados na pesquisa em sa√∫de

<br><br>

| Termos de busca (google scholar) | Resultados |
|----------------------------------|------------|
| "machine learning" e "health"    | 4.800.000  |
| "data mining" e "health"         | 5.440.000  |
| "data science" e "health"        | 7.270.000  |

------------------------------------------------------------------------

-   Em geral, o uso da ci√™ncia de dados na pesquisa:
    -   amplia o alcance
    -   aumenta o rigor
    -   eleva o impacto real

## Ci√™ncia de Dados na Pesquisa: repensar o fazer cient√≠fico

------------------------------------------------------------------------

1.  Implica√ß√µes da era do Big Data
2.  Implica√ß√µes dos desenvolvimentos em ML, DM e IA
3.  Implica√ß√µes do uso de linguagem de programa√ß√£o
4.  Efeitos potenciais na pesquisa universit√°ria

::: {style="position: absolute; bottom: 10px; left: 0; width: 100%; text-align: center; opacity: 0.3; font-size: 1.2em;"}
Ci√™ncia de Dados na Pesquisa: repensar o fazer cient√≠fico
:::

------------------------------------------------------------------------

### Big Data e a revolu√ß√£o dos dados {.smaller}

-   Dados administrativos se tornaram dados secund√°rios de pesquisa
    -   Ex: Registros eletr√¥nicos do **e-SUS**, **SIH/SUS**, **SINAN** e **SIVEP**
-   Dados n√£o usuais tornaram-se mais acess√≠veis
    -   Ex: prescri√ß√µes m√©dicas, √°udios de consultas, imagens de exames, etc.
-   Dispositivos e sistemas passaram a gerar outros dados
    -   Ex: Dados oriundos de dispositivos vest√≠veis (wearables) e apps de sa√∫de

------------------------------------------------------------------------

### Machine Learning, Data Mining e Intelig√™ncia Artificial {.smaller}

-   Novas e melhores ferramentas de an√°lise
    -   An√°lise de dados n√£o estruturados
        -   Ex: textos, imagens, v√≠deos
    -   Minera√ß√£o
    -   Predi√ß√£o
        -   Ex: Predi√ß√£o da mortalidade hospitalar
    -   Classifica√ß√£o
        -   Ex: Algoritmo de classifica√ß√£o baseado em deep learning para detectar retinopatia diab√©tica
    -   Agrupamento
        -   Ex: Identificar subgrupos de pacientes com insufici√™ncia card√≠aca congestiva com base em caracter√≠sticas cl√≠nicas, visando apoiar tratamentos personalizados

------------------------------------------------------------------------

### Uso de uma linguagem de programa√ß√£o {.smaller}

-   Aumenta a **reprodutibilidade** e **transpar√™ncia** (exemplo: github)
-   Melhora a **comunica√ß√£o dos resultados** (exemplo: preliminar e desenho)
-   Melhora o di√°logo entre grupos de pesquisa (exemplo: [aplicativo web](https://djalmabarbosa.shinyapps.io/TematicoApp/))
-   Melhora o fluxo de orienta√ß√£o/mentoria
-   Fortalece a **ci√™ncia aberta** e a **confian√ßa p√∫blica**
-   Viabiliza forma√ß√£o interdisciplinar
-   Permite intera√ß√£o mais natural com ferramentas de IA (exemplo: chatgpt)

## Uso da IA como assistente de pesquisa {.smaller}

------------------------------------------------------------------------

-   Acelera√ß√£o da codifica√ß√£o
    -   Gera√ß√£o r√°pida de fun√ß√µes e scripts com base em linguagem natural
    -   Sugest√µes otimizadas de c√≥digo para evitar erros
-   Melhora na organiza√ß√£o do fluxo de an√°lise de dados
    -   Visualiza√ß√µes explorat√≥rias automatizadas
    -   Cria√ß√£o de pipelines de pr√©-processamento

::: {style="position: absolute; bottom: 10px; left: 0; width: 100%; text-align: center; opacity: 0.3; font-size: 1.2em;"}
Uso da IA como assistente de pesquisa
:::

------------------------------------------------------------------------

-   Auxilia na documenta√ß√£o e reprodutibilidade
    -   Coment√°rios autom√°ticos e claros no c√≥digo
    -   Templates para RMarkdown, Quarto, Jupyter etc.
-   Aux√≠lio em an√°lises estat√≠sticas e modelagem
    -   Sugest√µes e explica√ß√µes de testes estat√≠sticos
    -   Compara√ß√£o de modelos
    -   Auxilia na constru√ß√£o de simula√ß√µes
    -   Ajuda a encontrar erros no c√≥digo (debug)

::: {style="position: absolute; bottom: 10px; left: 0; width: 100%; text-align: center; opacity: 0.3; font-size: 1.2em;"}
Uso da IA como assistente de pesquisa
:::

------------------------------------------------------------------------

-   Auxilia na divulga√ß√£o dos resultados
    -   Templates para formata√ß√£o de monografias, disserta√ß√µes e teses
    -   Elobora√ß√£o de produtos de dados
-   Pode acelerar o aprendizado
    -   Explica√ß√µes sob demanda de sintaxe e conceitos estat√≠sticos
    -   Refer√™ncia a pacotes, fun√ß√µes e boas pr√°ticas
    -   Respostas a perguntas avan√ßadas de modelagem e dados

::: {style="position: absolute; bottom: 10px; left: 0; width: 100%; text-align: center; opacity: 0.3; font-size: 1.2em;"}
Uso da IA como assistente de pesquisa
:::

## Fortalecimento da rela√ß√£o entre Pesquisa, Extens√£o e Inova√ß√£o

------------------------------------------------------------------------

-   Novas possibilidade de pesquisas com aplica√ß√µes pr√°ticas
-   An√°lise de dados em tempo real
-   Cria√ß√£o de produtos tecnol√≥gicos (produtos de dados)
-   Maior protagonismo do estudante
-   Oportunidade de forma√ß√£o interprofissional
-   Maior empregabilidade

::: {style="position: absolute; bottom: 10px; left: 0; width: 100%; text-align: center; opacity: 0.3; font-size: 1.2em;"}
Fortalecimento da rela√ß√£o entre Pesquisa, Extens√£o e Inova√ß√£o
:::

## Por que a linguagem/software R

------------------------------------------------------------------------

-   O R √© uma linguagem de programa√ß√£o *funcional*

-   As fun√ß√µes s√£o armazenadas em pacotes

    -   Pacotes b√°sicos + pacotes instal√°veis
    -   Mais de 16.000 pacotes (2020)

-   O software e a linguagem *gratuitos*

-   Pode ser utilizado em diversos sistemas operacioanais

::: {style="position: absolute; bottom: 10px; left: 0; width: 100%; text-align: center; opacity: 0.3; font-size: 1.2em;"}
Por que a linguagem/software R
:::

------------------------------------------------------------------------

-   Possui uma comunidade de colabora√ß√£o ativa

-   Possui um sistema de 'controle de qualidade'

-   √â a linguagem preferida dos estat√≠sticos

-   √â uma das linguagens de an√°lise estat√≠sticas mais utilizadas no mundo

-   Viabiliza o trabalho IA integrada

::: {style="position: absolute; bottom: 10px; left: 0; width: 100%; text-align: center; opacity: 0.3; font-size: 1.2em;"}
Por que a linguagem/software R
:::

# 3. Usando o R!

## Pr√°tica: Baixar e instalar o R

------------------------------------------------------------------------

<https://cran.r-project.org/bin/windows/base/>

------------------------------------------------------------------------

![](R_download.png)

------------------------------------------------------------------------

![](R_mirror.png)

------------------------------------------------------------------------

![](R_install.png)

------------------------------------------------------------------------

### Inserindo c√≥digo diretamente no console do R

------------------------------------------------------------------------

![Console do R](R_console.png)

### Pr√°tica: baixar e instar o RStudio

### ![RStudio](RStudio2.png)

### Como usar o RStudio

1.  Escrevendo no console
2.  Utilizando seus tipos de arquivo
    -   R Sript (simples e √∫til)
    -   RMarkdown
    -   Quarto\
3.  Utilizando projetos
4.  Integrando o GitHub
5.  Com um co-piloto (IA)

## Escrevendo no painel *console* do RStudio

------------------------------------------------------------------------

![Console do RStudio](RStudio_console.png)

## Utilizando *R scripts*

------------------------------------------------------------------------

-   Um *script* √© um texto em forma de comandos (c√≥digos), que o R interpreta como uma a√ß√£o a ser executada.
-   √â um roteiro de execu√ß√£o
-   Executa c√≥digo sequencialmente
-   √â o arquivo utilizado pelo R, quando n√£o se usa o RStudio

::: {style="position: absolute; bottom: 10px; left: 0; width: 100%; text-align: center; opacity: 0.3; font-size: 1.2em;"}
Escrevendo um *R script*
:::

------------------------------------------------------------------------

[*Pr√°tica*]{.azul}

::: {.callout style="border-left: 4px solid #198754; background-color: #e6f4ea;"}
<br>

Clique em: *Menu* \> *File \> New File \> R Script*

Escreva no seu R Script: 2+2

Coloque o cursor do mouse na linha com o c√≥digo e clique em 'Run'.

Para salvar: *File \> Save*

<br>
:::

------------------------------------------------------------------------

Em geral os *scripts* possuem os seguintes elementos:

| Termo | Sin√¥nimos | Descri√ß√£o |
|------------------|----------------------|--------------------------------|
| Base de dados | *dataframe*, Banco de dados | Estrutura que armazena dados |
| Vari√°vel | *Column*, Coluna | Campo que armazena valores para an√°lise |
| Linha | *Row*, Observa√ß√£o, Registro | Cada entrada ou conjunto de valores |
| **Fun√ß√£o** | Verbo, Comando | A√ß√£o que o R executa |
| Argumento | Par√¢metro | Define op√ß√µes dentro de uma fun√ß√£o |
| Output | Resultado | Retorno gerado pelo c√≥digo |

------------------------------------------------------------------------

### Fun√ß√µes

------------------------------------------------------------------------

::: {.callout-note style="background-color:#dceeff;"}
-   O R √© uma linguagem funcional
-   Fun√ß√µes v√™m associadas a par√™nteses `( )`, onde colocamos os *argumentos da fun√ß√£o*.
-   Exemplos da matem√°tica:\
-   $y = f(x)$
-   $z = f(x, y)$ ... [Latex]{.verde}
-   A fun√ß√£o mais simples no R √© a cria√ß√£o de um conjunto de valores (*vetor*)
:::

------------------------------------------------------------------------

### [*Pr√°tica*]{.azul}

``` r
# Soma 2 com 2
2+2

# Cria o vetor x
x <- c(1,1,2,3,5,8) # define o objeto x

mean(x) # Calcula a media de x
```

------------------------------------------------------------------------

### Utilizando pacotes (*packages*) <br> [*Pr√°tica*]{.azul}

------------------------------------------------------------------------

-   Instalando com 'click' *Tools, Install Packages*.

-   Com comando:

    ``` r
    install.packages("tidyr")
    ```

-   Carregando o pacote instalado

    ``` r
    library(tidyr)
    ```

    -   Voc√™ sempre precisar√° recarregar os novos pacotes ap√≥s encerrar uma se√ß√£o

-   Verificando os pacotes instalados

    ``` r
    sessionInfo()
    ```

-   Atualizando pacotes

------------------------------------------------------------------------

#### Tidyverse

------------------------------------------------------------------------

::: panel-tabset
#### Filosofia

```{r Tidyverse}
knitr::include_graphics("tidyverse.png")
```

#### Pacotes do Tidyverse

```{r Pacotes do Tidyverse}
knitr::include_graphics("pacotes_tidyverse.png")
```
:::

------------------------------------------------------------------------

O *tidyverse* √© um metapacote que segue uma filosofia de design, gram√°tica e estruturas de dados em comum para que diversos pacotes √∫teis para a ci√™ncia de dados possam ser utilizados em cojunto

------------------------------------------------------------------------

#### [*Pr√°tica*]{.azul}

Vamos instalar e carregar os pacotes do *tidyverse*

``` r
if(!require(tidyverse)) install.packages("tidyverse") 

library(tidyverse)

# Agora podemos usar uma fun√ß√£o 'tible' que faz parte do tidyverse

y <- c(1,2,3,4,5,6)

tibble(x,y) # retorna o objeto no console

dados <- tibble(x,y)
```

------------------------------------------------------------------------

### Dicas de organiza√ß√£o do *script*

------------------------------------------------------------------------

### ‚ùå Bagun√ßado

``` r
library(dplyr)
dados=data.frame(nome=c("Ana","Bruno","Carlos","Daniela"),idade=c(23,35,31,28),salario=c(2500,4200,3900,3100))
dados_filtrados=dados%>%filter(salario>3000)
media_idade=mean(dados_filtrados$idade)
print(dados_filtrados)
```

### ‚úÖ Organizado

``` r
# Carrega pacotes necess√°rios
library(dplyr)

# Cria um dataframe de exemplo
dados <- data.frame(
  nome = c("Ana", "Bruno", "Carlos", "Daniela"),
  idade = c(23, 35, 31, 28),
  salario = c(2500, 4200, 3900, 3100)
)

# Filtra pessoas com sal√°rio acima de 3000
dados_filtrados <- dados %>%
  filter(salario > 3000)

# Calcula a m√©dia de idade das pessoas filtradas
media_idade <- mean(dados_filtrados$idade)

# Exibe os dados filtrados e a m√©dia de idade
print(dados_filtrados)
```

------------------------------------------------------------------------

::: {.callout-tip style="background-color:#e6ffe6;"}
``` r

# Verificando o diret√≥rio de trabalho
getwd()
```
:::

## Usando o R Markdown <br> [*Pr√°tica*]{.azul}

------------------------------------------------------------------------

::: {.callout-note style="background-color:#dceeff;"}
Crie um novo arquivo clicando em: **File \> New File \> R Markdown...**

Escolha um t√≠tulo, autor e selecione o formato desejado (HTML, PDF, Word).
:::

------------------------------------------------------------------------

-   R Markdown √© uma ferramenta que permite combinar **texto formatado** com **c√≥digo execut√°vel**.
-   √â um documento din√¢mico
-   Ideal para **relat√≥rios reprodut√≠veis**, **an√°lises**, **artigos cient√≠ficos** e **apresenta√ß√µes**.
-   Usa o formato `.Rmd`.
-   Para compilar, clique em `Knit`.

------------------------------------------------------------------------

## Estrutura b√°sica de um arquivo R Markdown

``` text
---
title: "Meu primeiro R Markdown"
author: "Seu Nome"
date: "`r Sys.Date()`"
output: html_document
---

## Introdu√ß√£o

Texto explicativo aqui.

C√≥digos nas chuncks
{r chunk do r}
```

------------------------------------------------------------------------

::: {.callout-tip style="background-color:#e6ffe6;"}
Atalho para criar uma nova chunk: Ctrl + Alt + i
:::

### Principais componentes de um R Markdown {.smaller}

| Elemento | Exemplo | Descri√ß√£o |
|-----------------------|-----------------------|---------------------------|
| **Texto** | Markdown | Escrita formatada (t√≠tulos, listas, negrito, etc.) |
| **C√≥digo R** | `{r plot(x)`} | C√≥digo que ser√° executado |
| **Chunks** | `{r nome}` | Blocos de c√≥digo identific√°veis |
| **YAML Header** | `--- ... ---` | Metadados sobre o documento |

------------------------------------------------------------------------

::: {.callout-tip style="background-color:#e6ffe6;"}
Use `echo = FALSE` para ocultar o c√≥digo e mostrar apenas o resultado:

\`\`\`{r echo=FALSE}

mean(c(1, 2, 3, 4, 5))

\`\`\`

Use `eval = FALSE` para evitar a execu√ß√£o do c√≥digo e mostr√°-lo como exemplo:

\`\`\`{r, echo=FALSE, eval=FALSE}

Voc√™ pode colocar textos, sem \# para coment√°rios:

Verificar outras fun√ß√µes para calcular a m√©dia...

Ou pode colocar c√≥digos de an√°lise, que voc√™ n√£o quer usar no momento...

\`\`\`
:::

------------------------------------------------------------------------

::: {.callout-tip style="background-color:#e6ffe6;"}
Use `message = FALSE, warning = FALSE` para esconder mensagens e avisos. <br><br>

Confira os 'Cheat Sheets' para ver o que √© poss√≠vel fazer!

<https://posit.co/resources/cheatsheets/> (Diversos!)

[üìÑ RMarkdown Cheatsheet (abrir PDF)](https://github.com/rstudio/cheatsheets/raw/main/rmarkdown.pdf){target="_blank"}
:::

## Usando o R Markdown <br> [*Pr√°tica*]{.azul}

## Quarto vs R Markdown

------------------------------------------------------------------------

| Caracter√≠stica | R Markdown (.Rmd) | Quarto (.qmd) |
|------------------|------------------------|------------------------------|
| Engine | R (com suporte parcial a Python) | R, Python, Julia e Observable integrados |
| YAML | `output: html_document` | `format: html` |
| Execu√ß√£o de c√≥digo | Integrada via knitr | Integrada via Jupyter ou knitr |
| Formatos de sa√≠da | HTML, PDF, Word, slides | HTML, PDF, Word, Reveal.js, livros, sites |
| Flexibilidade de linguagem | Limitada | Multil√≠ngue e orientada a ci√™ncia de dados |
| Instala√ß√£o necess√°ria | R + RStudio | Pode usar com ou sem RStudio, CLI dispon√≠vel |
| Renderiza√ß√£o | `Knit` bot√£o no RStudio | `Render` bot√£o ou terminal com `quarto render` |
| Templates | Limitados, muitos voltados ao R | Amplo suporte a templates para blogs, sites, livros, etc. |
| Suporte para apresenta√ß√µes | Sim (com xaringan, ioslides, slidy, beamer) | Sim (nativamente com Reveal.js e Beamer) |
| Controle de layout | Limitado | Avan√ßado com markdown, divs e CSS |
| Comunidade e futuro | Est√°vel, por√©m sem grandes atualiza√ß√µes | Plataforma em crescimento e com maior integra√ß√£o |

------------------------------------------------------------------------

## Utilizando a ferramenta "Projetos"

-   Organiza seus diret√≥rios

-   Facilita a importa√ß√£o e exporta√ß√£o de bases de dados

-   Facilita o compartilhamento de c√≥digo

### [*Pr√°tica*]{.azul}

::: {.callout style="border-left: 4px solid #198754; background-color: #e6f4ea;"}
1.  No canto superior direito, clique em:

    -   **New Project**
    -   **New Directory**
    -   **New Project** novamente

2.  Escolha o nome que desejar para o projeto e o local onde ser√° salvo.

3.  Clique em **Create Project** ‚úÖ
:::

## Utilizando o Git/GitHub

### Git

-   **Git** √© um sistema de **controle de vers√µes distribu√≠do** criado por Linus Torvalds em 2005
-   Permite o *versionamento do c√≥digo*
    -   Registro hist√≥rico de altera√ß√µes em arquivos de c√≥digo e projetos
    -   Facilita o trabalho colaborativo, a recupera√ß√£o de vers√µes anteriores e o rastreamento de quem fez o qu√™
-   Usado localmente no seu computador, e tamb√©m com servi√ßos como o GitHub

### GitHub

-   Plataforma de hospedagem de c√≥digo e projetos que usam Git
-   N√£o √© exclusivo da linguagem R
-   Facilita a **colabora√ß√£o**, **rastreamento de mudan√ßas** e **distribui√ß√£o de projetos**
-   Permite maior **transpar√™ncia cient√≠fica** e **reprodutibilidade**
-   Permite **publica√ß√£o de reposit√≥rios**: sites, documentos e dashboards

### Fluxo b√°sico de uso do GitHub üö¶

1.  Criar conta no [github.com](https://github.com)
2.  Criar novo reposit√≥rio
3.  Fazer *clone* no RStudio ou usar GitHub Desktop
4.  Trabalhar localmente: editar scripts, salvar, testar
5.  Realizar *commit* e *push* das altera√ß√µes

::: {.callout-tip style="background-color:#e6ffe6;"}
1.  Clonar resosit√≥rios de outras pessoas (melhor para explorar, aprender...)
2.  Fazer um 'fork' (permite sugerir mudan√ßas)
:::

------------------------------------------------------------------------

::: callout-tip
Voc√™ tamb√©m pode:

1.  Clonar resosit√≥rios de outras pessoas (melhor para explorar, aprender...)
2.  Fazer um 'fork' (permite sugerir mudan√ßas)
:::

### Exemplo de estrutura de reposit√≥rio

``` text
projeto-chikungunya/
‚îú‚îÄ‚îÄ dados/
‚îÇ   ‚îî‚îÄ‚îÄ base_limpa.xlsx
‚îú‚îÄ‚îÄ scripts/
‚îÇ   ‚îî‚îÄ‚îÄ analise_chikungunya.R
‚îú‚îÄ‚îÄ output/
‚îÇ   ‚îî‚îÄ‚îÄ grafico_incidentes.png
‚îú‚îÄ‚îÄ README.md
‚îî‚îÄ‚îÄ LICENSE
```

::: notes
Crie um chunk de c√≥digo, e no chatgpt, escreva:\
\
"Abra o c√≥digo abaixo no canvas, para edi√ß√£o."
:::

## Utilizando IA como assistente de pesquisa

Dentre as formas de uso de IA dentro do RStudio, est√£o:

1.  Co-piloto (GitHub Co-pilot)\
2.  Como um chat-bot, dentro do RStudio (pacote *chattr*)
3.  Chat-bot externo (Microssoft Co-pilot, Chatgpt...)

## Buscando ajuda (help!) {.smaller}

Algumas das principais formas de buscar ajuda s√£o:

1.  O *Help* ou documenta√ß√£o do R

    ```{r, echo=TRUE, eval = F}

    help(sqrt)
    ```

2.  Google

3.  Foruns

    1.  *Stackoferflow* (<https://pt.stackoverflow.com>)

    2.  Posit Community (<https://forum.posit.co/>)

    3.  GitHub (<https://github.com/>)

4.  IA

    1.  Microssoft co-pilot

    2.  Chat GPT

    3.  Gemini

# 4. Introdu√ß√£o √† linguagem R

## Objetos

O R possui cinco classes b√°sicas (at√¥micas) de objetos:

1.  caracter
2.  num√©rico (n√∫meros reais)
3.  inteiro
4.  complexo
5.  l√≥gico (verdadeiro/falso

[O objeto mais b√°sico √© um vetor.]{.fragment}

-   Um vetor pode conter apenas objetos at√¥micos da mesma classe
    -   Exce√ß√£o: *lista*

## N√∫meros

-   No R, n√∫meros s√£o geralmente considerados como objetos num√©ricos (n√∫meros reais com maior precis√£o '*double*')
-   Se quisermos usar n√∫meros inteiros, podemos utilizar o sufxo L
-   Existe um n√∫mero especial *Inf*, para representar o infinito.
    -   P.e: 1/ Inf; 0
-   *NaN* representa um valor indefinido ("*not a number*").
    -   P.e: 0/0; NaN

## Atributos

Os objetos do R podem ter atributos

-   *names*, *dimnames*
-   *dimensions*, para matrizes ou arranjos
-   *class*
-   *length*
-   Outras, definidas pelo usu√°rio

[Podemos acessar os atributos de um objeto com a fun√ß√£o *attributes()*]{.fragment}

## Entrando com os insumos

> No prompt do R digitamos **express√µes**.

> O simbolo '\<-' √© o **operador de atribui√ß√£o**.

``` r
> x <- 1
```

<br>

> A **gram√°tica da linguagem** determina se uma express√£o est√° ou n√£o completa.

``` r
> x <-   ## express√£o incompleta

# indica coment√°rio. Tudo depois dele √© ignorado.
```

------------------------------------------------------------------------

Quando uma express√£o completa √© colocada no **prompt** ela √© avaliada, e o resultado da avalia√ß√£o √© retornado.

``` r
x # print autom√°tico
print(x) # print expl√≠cito

# [1] 5 indica que x √© um vetor, e que 5 √© o primeiro elemento.
```

<br>

::: callout-tip
Podemos utilizar o operador ':' para criar inteiros em sequ√™ncia.

```{r, echo=TRUE}
x <- 1:22
x
```
:::

## Criando vetores

A fun√ß√£o *c()* pode ser utilizada para criar vetores de objetos:

``` r

x <- c(0.4, 0.9)       # numeric
x <- c(TRUE, FALSE)    # logical
x <- c(T, F)           # logical
x <- c("a", "b", "c")  # character
x <- 3:25              # integer
x <- c(2+0i, 1+4i)     # complex
```

<br>

::: callout-tip
Utilize a fun√ß√£o *class()* para varificar o tipo de objeto criado

```{r, echo=TRUE}
class(x)
```

Ou observe a classe no painel superior direito.

:::
------------------------------------------------------------------------

### Misturando objetos

O que acontece quando fazemos:

``` r
y <- c(1.7, "a")  # character
y <- c(TRUE, 2)   # numeric
y <- c("a", TRUE) # character
```


![Regra de coer√ß√£o. Fonte: Hands-on Programming with R, Grolemund (2015)](coercao_regra.png)
