---
title: "Ciência de Dados para Pesquisadores da Saúde"
subtitle: |
  Módulo 1: Ferramentas, linguagens e possibilidades<br><br><br>  
  *Projeto Saúde Data Science*
format: 
    revealjs:
      slide-number: true
      slide-level: 3
      logo: logoUFR.png
      incremental: true
      scrollable: true
      theme: simple
      code-fold: false
      self-contained: true
      css: estilo_modulo1_slides.css
editor: visual
---

# 1. Introdução

## O que é ciência de dados (*Data Science*)

<br>

::: {style="text-align: justify;"}
<p>Campo acadêmico interdisciplinar que utiliza estatística, computação científica, métodos científicos, processos, algoritmos e sistemas para extrair ou extrapolar conhecimento e <em>insights</em> de dados ruidosos, estruturados e não estruturados. Dhar, V. (2013).</p>
:::

<!-- -->

<br>

Conceitos relacionados: Big Data, Mineração de Dados e Machine Learning

## Mineração de Dados <br> (*Data Mining*)

<br>

::: {style="text-align: justify;"}
“É o processo de extrair e descobrir padrões em grandes bancos de dados envolvendo métodos relacionados à aprendizagem de máquina, estatística e sistemas de bancos de dados.” Wikipedia
:::

## Mineração de Dados {.smaller}

-   Consiste em descobrir padrões e extrair padrões do dados

-   Teve maior desenvolvimento na década de 90, no ramo empresarial

## Aprendizagem de Máquina <br> (Machine Learning)

- Consiste em desenvolver algoritmos que permitem os computadores aprenderem dos dados e tomarem decisões baseadas em dados  
- Surgiu na década de 1950  
- > **Arthur Samuel (1959)** definiu *machine learning* como:  
  > "o campo de estudo que dá aos computadores a habilidade de aprender sem serem explicitamente programados."

---

| Aspecto                  | Mineração de Dados                                      | Aprendizagem de Máquina                                 |
|--------------------------|----------------------------------------------------------|----------------------------------------------------------|
| **Objetivo principal**   | Extrair padrões úteis e conhecimento de dados            | Fazer previsões ou tomar decisões com base em dados      |
| **Enfoque**              | Exploração e descoberta de padrões em grandes conjuntos de dados | Generalização para novos dados a partir de exemplos passados |
| **Tarefa típica**        | Agrupamento, associação, descoberta de regras            | Classificação, regressão, clustering supervisionado       |
| **Motivação original**   | Análise de grandes volumes de dados corporativos         | Construção de algoritmos que aprendem automaticamente     |
| **Uso comum em**         | Negócios, marketing, banco de dados                      | Inteligência artificial, robótica, sistemas autônomos     |
| **Base técnica**         | Estatística + banco de dados + ML                        | Estatística + algoritmos + computação                     |


## Por que Ciência de Dados na Pesquisa em Saúde?

--- 

- Em geral, o uso da ciência de dados na pesquisa:
  - amplia o alcance 
  - aumenta o rigor
  - eleva o impacto real


--- 

## Repensar do fazer científico

---

### Big Data e a revolução dos dados 

- Dados administrativos se tornaram dados secundários de pesquisa 
  - Ex: Registros eletrônicos do **e-SUS**, **SIH/SUS**, **SINAN** e **SIVEP**

- Dados não usuais tornaram-se mais acessíveis
  - Ex: prescrições médicas, áudios de consultas, imagens de exames, etc.  

- Novas possibilidades de coleta de dados
  - Ex: Dados oriundos de dispositivos vestíveis (wearables) e apps de saúde

---

### Machine Learning, Data Mining e Inteligência Artificial

- Novas e melhores ferramentas de análise
  - Análise de dados não estruturados
    - Ex: textos, imagens, vídeos
  - Mineração 
  - Predição
    - Ex: predição mais correta de desfechos de saúde
  - Classificação
    - Ex: 
  - Agrupamento
    - Ex:

---

### Fortalecimento da relação entre Pesquisa, Extensão e Inovação

---

- Novas possibilidade de pesquisas com aplicações práticas 
- Análise de dados em tempo real
- Criação de produtos tecnológicos (produtos de dados)
- Maior protagonismo do estudante
- Oportunidade de formação interprofissional
- Maior empregabilidade

---

## Mudanças no fazer científico

---

- Uso de uma linguagem de programação:
  - Aumenta a **reprodutibilidade** e **transparência** (exemplo: github)
  - Melhora a **comunicação dos resultados** (exemplo: relatório de pesquisa)
  - Melhora o diálogo entre grupos de pesquisa (exemplo: aplicativo web)
  - Melhora o fluxo de orientação/mentoria
  - Fortalece a **ciência aberta** e a **confiança pública**
  - Viabiliza formação interdisciplinar
  - Permite interação mais natural com ferramentas de IA (exemplo: chatgpt)

--- 

## Usando seu assistente de pesquisa

---

- Aceleração da codificação
  - Geração rápida de funções e scripts com base em linguagem natural
  - Sugestões otimizadas de código para evitar erros

- Melhora na organização do fluxo de análise de dados
  - Visualizações exploratórias automatizadas
  - Criação de pipelines de pré-processamento

---

- Auxilia na documentação e reprodutibilidade
  - Comentários automáticos e claros no código
  - Templates para RMarkdown, Quarto, Jupyter etc.

- Auxílio em análises estatísticas e modelagem
  - Sugestões e explicações de testes estatísticos
  - Comparação de modelos
  - Auxilia na construção de simulações

---

- Auxilia na divulgação dos resultados
  - Criação de templates para formatação de monografias, dissertações e teses
  - Eloboração de produtos de dados

- Pode acelerar o aprendizado
  - Explicações sob demanda de sintaxe e conceitos estatísticos
  - Referência a pacotes, funções e boas práticas
  - Respostas a perguntas avançadas de modelagem e dados

---

## Por que a linguagem/software R 

---

-   O R é uma linguagem de programação *funcional*

-   As funções são armazenadas em pacotes

    -   Pacotes básicos + pacotes instaláveis
    -   Mais de 16.000 pacotes (2020)

-   O software e a linguagem *gratuitos*

-   Pode ser utilizado em diversos sistemas operacioanais

--- 

-   Possui uma comunidade de colaboração ativa

-   Possui um sistema de 'controle de qualidade'

-   É a linguagem preferida dos estatísticos

-   É uma das linguagens de análise estatísticas mais utilizadas no mundo.

-   Viabiliza o trabalho com co-piloto (IA)

# 2. Usando o R!

## Prática: Baixar e instalar o R

---

<https://cran.r-project.org/bin/windows/base/>

![](R_download.png)
---

![](R_mirror.png)
---

![](R_install.png)

### Inserindo código diretamente no console do R

![Console do R](R_console.png)


## Prática: baixar e instar o RStudio

![RStudio](RStudio2.png)
---

## Como usar o RStudio

1. Escrevendo no console
2. Utilizando seus tipos de arquivo
- R Sript (simples e útil)
- RMarkdown
- Quarto
3. Utilizando projetos
4. Utilizando o GitHub
5 Utilizando IA


## Escrevendo no painel *console* do RStudio

---

![Console do RStudio](RStudio_console.png)


--- 

## Tipos de arquivo

---




---

## Buscando ajuda (help!) {.smaller}

Algumas das principais formas de buscar ajuda são:

1.  O *Help* ou documentação do R

    ```{r, echo=TRUE, eval = F}

    help(sqrt)
    ```

2.  Google

3.  Foruns

    1.  *Stackoferflow* (<https://pt.stackoverflow.com>)

    2.  Posit Community (<https://forum.posit.co/>)

    3.  GitHub (<https://github.com/>)

4.  IA

    1.  Microssoft co-pilot

    2.  Chat GPT

    3.  Gemini


# 2. Trabalhando com o R 


## Escrevendo um *Script*

---

- Um *script* é um texto em forma de comandos (códigos), que o R interpreta como uma ação a ser executada.
- É um roteiro de execução
- No RStudio, criamos um *script* clicando em *Menu*, *File, New File, R Script*.
- Para salvar: *File, Save*
- Em geral os *scripts* possuem os seguintes elementos:

---

| Termo       | Sinônimos                        | Descrição                                        |
|-------------|----------------------------------|--------------------------------------------------|
| Base de dados | *dataframe*, Banco de dados    | Estrutura que armazena dados                     |
| Variável    | *Column*, Coluna                 | Campo que armazena valores para análise          |
| Linha       | *Row*, Observação, Registro      | Cada entrada ou conjunto de valores              |
| **Função**  | Verbo, Comando                   | Ação que o R executa                             |
| Argumento   | Parâmetro                        | Define opções dentro de uma função               |
| Output      | Resultado                        | Retorno gerado pelo código                       |

---

## Funções

---

-   O R é uma linguagem funcional

-   Funções vêm associadas a parênteses '( )', onde colocamos os *argumentos da função*.

-   Exemplos da matemática: $y = f(x)$, $z = f(x,y)$ ...

-   A função mais simples no R é a criação de um conjunto de valores (*vetor*)

    ```{r, echo=TRUE}

    x <- c(1,1,2,3,5,8)

    mean(x)
    ```

---

## Utilizando pacotes (*packages*)

---

-   Podemos acessar os pacotes em *Tools, Install Packages*.

-   Utilizando o comando:

    ``` r
    install.packages("tidyr")
    ```

-   Carregando o pacote instalado

    ``` r
    library(tidyr)
    ```

    -   Você sempre precisará recarregar os novos pacotes após encerrar uma seção

-   Verificando os pacotes instalados

    ``` r
    sessionInfo()
    ```

-   Atualizando pacotes

---

## Dicas de organização do *script*

---

### ❌ Bagunçado

```r
library(dplyr)
dados=data.frame(nome=c("Ana","Bruno","Carlos","Daniela"),idade=c(23,35,31,28),salario=c(2500,4200,3900,3100))
dados_filtrados=dados%>%filter(salario>3000)
media_idade=mean(dados_filtrados$idade)
print(dados_filtrados)
```

### ✅  Organizado

```r
# Carrega pacotes necessários
library(dplyr)

# Cria um dataframe de exemplo
dados <- data.frame(
  nome = c("Ana", "Bruno", "Carlos", "Daniela"),
  idade = c(23, 35, 31, 28),
  salario = c(2500, 4200, 3900, 3100)
)

# Filtra pessoas com salário acima de 3000
dados_filtrados <- dados %>%
  filter(salario > 3000)

# Calcula a média de idade das pessoas filtradas
media_idade <- mean(dados_filtrados$idade)

# Exibe os dados filtrados e a média de idade
print(dados_filtrados)
```

---

-   Uso do \# para comentários dentro do código

-   Identação

-   IA pode ajudar!

::: notes
Crie um chunk de código, e no chatgpt, escreva:\
\
"Abra o código abaixo no canvas, para edição."
:::

### Verificando o diretório de trabalho

``` r
getwd()
```

### Utilizando a ferramenta de "Projetos"

-   Organiza seus diretórios

-   Facilita a importação e exportação de bases de dados

-   Facilita o compartilhamento de código
